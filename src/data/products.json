{
    "jcc-stores": {
        "name": "JCC-Stores",
        "desc": "Want your players to have a unique shopping experience? JCC-Stores is the perfect solution! This script allows you to create custom stores with ease, offering a range of features like a customizable shop inventory sizes, a unique blip, NPC and Player stores, employee system (Only works if you own JCC-Society), and built-in safety features. Enjoy a seamless experience with a highly modular design.",
        "url": "https://jcc-scripts.tebex.io/package/6201077",
        "imgAlt": "JCC-Stores",
        "newFlag": true,
        "price": "Price: 20 USD",
        "video": false,
        "tags": ["Script"],
        "roadmap": true,
        "roadmapData": [
            {
                "name": "Admin Management Menu",
                "desc": "Add an admin management menu to allow for easy management of stores!",
                "status": "Planned"
            },
            {
                "name": "Jobs can manage stores",
                "desc": "Add the ability for jobs to manage stores, so players with the job can manage the store!",
                "status": "Planned"
            },
            {
                "name": "Make blips colorable",
                "desc": "Allow players to change the color of their society blip!",
                "status": "Planned"
            },
            {
                "name": "Developer Exports",
                "desc": "Add developer exports to allow for other scripts to interact with JCC-Stores!",
                "status": "Planned"
            },
            {
                "name": "Option for jobs to create stores",
                "desc": "Add an option for jobs to create stores, so players with the job can create stores!",
                "status": "Planned"
            },
            {
                "name": "Transferable Ownership",
                "desc": "Option so store owners can transfer ownership to one of thier employees or players! To allow for players to sell or pass down stores!",
                "status": "Planned"
            }
        ],
        "docs": false,
        "docsData": [],
        "roadmapRouteToName": "/products/roadmap/jcc-stores",
        "docsRouteToName": "/products/docs/jcc-stores",
        "img": "https://cdnb.artstation.com/p/assets/images/images/018/819/399/large/camilla-cesaratto-def1.jpg?1560859635"
    },
    "jcc-society": {
        "name": "JCC-Society",
        "desc": "Customize and manage your society effortlessly with simple configuration and seamless translations. Enjoy a highly modular experience, with features like an admin management menu, developer exports, webhooks, and built-in safety measures. Access a range of tools, including society inventories, upgradeable inventories, named societies, a togglable blip, ledger system, employee management, rank system, payment system, billing command, and tax implementation.",
        "url": "https://jcc-scripts.tebex.io/package/6157054",
        "imgAlt": "JCC-Society",
        "newFlag": false,
        "price": "Price: 30 USD",
        "video": "https://www.youtube.com/watch?v=TARUOl4slaM&ab_channel=JCCScripts",
        "tags": ["Script"],
        "roadmap": true,
        "roadmapData": [
            {
                "name": "Society Robberies",
                "desc": "Add robberies to societies, so players can rob society inventories, and ledgers!",
                "status": "Planned"
            },
            {
                "name": "Make blips colorable",
                "desc": "Allow players to change the color of their society blip!",
                "status": "Development"
            },
            {
                "name": "Buy Supplies",
                "desc": "Add the ability to buy supplies for your society!",
                "status": "Planned"
            },
            {
                "name": "Job System",
                "desc": "Add a job system to societies that allows societies to have a set job, and multijob menu for players so they can switch between jobs!",
                "status": "Published"
            },
            {
                "name": "Option For Jobs To Make Societies",
                "desc": "Add an option for jobs to make societies, so players with the job can make socities!",
                "status": "Development"
            },
            {
                "name": "Transferable Ownership",
                "desc": "Option so society owners can transfer ownership to one of thier employees or players! To allow for players to sell or pass down societies!",
                "status": "Planned"
            }
        ],
        "docs": true,
        "docsData": [
            {
                "title": "Import API",
                "desc": "Import the API into your script to use the API! This must be done in the server before you can use the API!",
                "code": "JCCSociety = exports['JCC-Society'].getSocietyAPI()"
            },
            {
                "title": "Get Society",
                "desc": "societyId is the id (business_id in database) Will return the society object or false if no society is found. This will allow you to access the society functions/class!",
                "code": "local society = JCCSociety:GetSociety(societyId)"
            },
            {
                "title": "Get Society Employees",
                "desc": "societyId is the id (business_id in database) Will return a table of the employees or false if none found",
                "code": "local society = JCCSociety:GetSociety(societyId)\nlocal employees = society:GetSocietyEmployees()"
            },
            {
                "title": "Get Society Info",
                "desc": "societyId is the id (business_id in database) Will return the societies data, or false if no society is found",
                "code": "local society = JCCSociety:GetSociety(societyId)\nlocal societyInfo = society:GetSocietyInfo()"
            },
            {
                "title": "Get Society Owner Character ID",
                "desc": "societyId is the id (business_id in database) Will return the owners character id, or false if no society is found",
                "code": "local society = JCCSociety:GetSociety(societyId)\nlocal ownerCharId = society:GetSocietyOwnerCharacterId()"
            },
            {
                "title": "Get Employee Data",
                "desc": "societyId is the id (business_id in database) charId is the character id you want to get the data for, will return the employees data, false if not found",
                "code": "local society = JCCSociety:GetSociety(societyId)\nlocal employeeData = society:GetEmployeeData(charId)"
            },
            {
                "title": "Get All Ranks",
                "desc": "societyId is the id (business_id in database) Will return a table of all the ranks, or false if none found",
                "code": "local society = JCCSociety:GetSociety(societyId)\nlocal ranks = society:GetAllRanks()"
            },
            {
                "title": "Get Rank Info",
                "desc": "societyId is the id (business_id in database) rankName is the rank you want to get the info for, will return the ranks data, false if not found",
                "code": "local society = JCCSociety:GetSociety(societyId)\nlocal rankInfo = society:GetRankInfo(rankName)"
            },
            {
                "title": "Get All Jobs From Societies Player Owns Or Is Employed At",
                "desc": "charId is the character id you want to check, will return a table of all the jobs from the societies the character owns or is employed at, or false if none found",
                "code": "local jobs = JCCSociety.MiscAPI:GetAllSocietyJobsFromSocietiesPlayerEmployedAtOrOwns(charId)\nif jobs then\nfor k, v in pairs(jobs) do\nprint(v.jobName .. ' ' .. v.societyId)\nend\nend"
            },
            {
                "title": "Check Rank Permissions",
                "desc": "societyId is the id (business_id in database) rankName is the rank you want to check permissions, will return the ranks permissions, false if not found",
                "code": "local society = JCCSociety:GetSociety(societyId)\nlocal rankPerms = society:CheckRankPermissions(rankName)"
            },
            {
                "title": "Check If Character Is An Emlpoyee",
                "desc": "societyId is the id (business_id in database) charId is the character id you want to check, will return true if they are an employee, false if not",
                "code": "local society = JCCSociety:GetSociety(societyId)\nlocal isEmployee = society:CheckIfCharacterIsEmployee(charId)"
            },
            {
                "title": "Get Employee Rank",
                "desc": "societyId is the id (business_id in database) charId is the character id you want to check, will return the employees rank, false if not found",
                "code": "local society = JCCSociety:GetSociety(societyId)\nlocal rank = society:GetEmployeeRank(charId)"
            },
            {
                "title": "Get Ledger Amount",
                "desc": "societyId is the id (business_id in database) will return the amount of money in the societies ledger",
                "code": "local society = JCCSociety:GetSociety(societyId)\nlocal ledgerAmount = society:GetLedgerAmount()"
            },
            {
                "title": "Get Society Tax Amount",
                "desc": "societyId is the id (business_id in database) will return the amount the society pays in taxes",
                "code": "local society = JCCSociety:GetSociety(societyId)\nlocal taxAmount = society:GetSocietyTaxAmount()"
            },
            {
                "title": "Add Money To Ledger",
                "desc": "societyId is the id (business_id in database) amount is the amount to add, will return true if it succeeded, false if failed",
                "code": "local society = JCCSociety:GetSociety(societyId)\nlocal success = society:AddMoneyToLedger(amount)"
            },
            {
                "title": "Remove Money From Ledger",
                "desc": "societyId is the id (business_id in database) amount is the amount to remove, will return true if it succeeded, false if failed",
                "code": "local society = JCCSociety:GetSociety(societyId)\nlocal success = society:RemoveMoneyFromLedger(amount)"
            },
            {
                "title": "Get All Societies Character Owns",
                "desc": "charId is the character id you want to check, will return a table of the societies the character owns, or false if none found",
                "code": "local societies = JCCSociety.MiscAPI:GetAllSocietiesCharOwns(charId)"
            },
            {
                "title": "Get All Societies Character Is Employed At",
                "desc": "charId is the character id you want to check, will return a table of the societies the character is employed at, or false if none found",
                "code": "local societies = JCCSociety.MiscAPI:GetAllSocietiesCharIsEmployedAt(charId)"
            },
            {
                "title": "Get All Societies",
                "desc": "Will return a table of all the societies, or false if none found",
                "code": "local societies = JCCSociety.MiscAPI:GetAllSocieties()"
            },
            {
                "title": "Check If a Player Has a certain Job And Is On Duty",
                "desc": "retval will return true if the player has the job and is on duty, false if they dont have the job or is not on duty",
                "code": "local retval = JCCSociety.MiscAPI:CheckIfPlayerHasJobAndIsOnDuty('police', _source)"
            }
        ],
        "roadmapRouteToName": "/products/roadmap/jcc-society",
        "docsRouteToName": "/products/docs/jcc-society",
        "img": "https://techraptor.net/sites/default/files/styles/image_header/public/2020-03/Red%20Dead%20Redemption%202%20RedM%20Multiplayer%20Mod%20cover.jpg?itok=YyGqo6ky"
    }
}